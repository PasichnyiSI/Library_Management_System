openapi: 3.0.0
info:
  title: Library API
  version: 0.1.0
paths:
  /books/:
    get:
      tags:
        - Books
      summary: Get Books
      operationId: get_books_books__get
      parameters:
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            maximum: 100
            minimum: 1
            description: Кількість книг на сторінці
            default: 10
            title: Limit
          description: Кількість книг на сторінці
        - name: offset
          in: query
          required: false
          schema:
            type: integer
            minimum: 0
            description: Зміщення для пагінації
            default: 0
            title: Offset
          description: Зміщення для пагінації
        - name: sort_by
          in: query
          required: false
          schema:
            type: string
            pattern: ^(title|author|published_year)$
            description: Поле для сортування
            default: title
            title: Sort By
          description: Поле для сортування
        - name: order
          in: query
          required: false
          schema:
            type: string
            pattern: ^(asc|desc)$
            description: Порядок сортування (asc/desc)
            default: asc
            title: Order
          description: Порядок сортування (asc/desc)
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BookResponse'
                title: Response Get Books Books  Get
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    post:
      tags:
        - Books
      summary: Create Book
      operationId: create_book_books__post
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BookCreate'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /books/{book_id}:
    get:
      tags:
        - Books
      summary: Get Book
      operationId: get_book_books__book_id__get
      parameters:
        - name: book_id
          in: path
          required: true
          schema:
            type: integer
            title: Book Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    delete:
      tags:
        - Books
      summary: Delete Book
      operationId: delete_book_books__book_id__delete
      parameters:
        - name: book_id
          in: path
          required: true
          schema:
            type: integer
            title: Book Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /books/books/{book_id}/history:
    get:
      tags:
        - Books
      summary: Get History Of Book
      operationId: get_history_of_book_books_books__book_id__history_get
      parameters:
        - name: book_id
          in: path
          required: true
          schema:
            type: integer
            title: Book Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BorrowingHistoryResponse'
                title: Response Get History Of Book Books Books  Book Id  History Get
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /authors/:
    get:
      tags:
        - Authors
      summary: Get Authors
      operationId: get_authors_authors__get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/AuthorResponse'
                type: array
                title: Response Get Authors Authors  Get
    post:
      tags:
        - Authors
      summary: Create Author
      operationId: create_author_authors__post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthorCreate'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /authors/{author_id}:
    get:
      tags:
        - Authors
      summary: Get Author
      operationId: get_author_authors__author_id__get
      parameters:
        - name: author_id
          in: path
          required: true
          schema:
            type: integer
            title: Author Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    delete:
      tags:
        - Authors
      summary: Delete Author
      operationId: delete_author_authors__author_id__delete
      parameters:
        - name: author_id
          in: path
          required: true
          schema:
            type: integer
            title: Author Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /authors/{author_id}/books:
    get:
      tags:
        - Authors
      summary: Get Books By Author
      operationId: get_books_by_author_authors__author_id__books_get
      parameters:
        - name: author_id
          in: path
          required: true
          schema:
            type: integer
            title: Author Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BookResponse'
                title: Response Get Books By Author Authors  Author Id  Books Get
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /genres/:
    get:
      tags:
        - Genres
      summary: Get Genres
      operationId: get_genres_genres__get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/GenreResponse'
                type: array
                title: Response Get Genres Genres  Get
    post:
      tags:
        - Genres
      summary: Create Genre
      operationId: create_genre_genres__post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenreCreate'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenreResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /genres/{genre_id}:
    get:
      tags:
        - Genres
      summary: Get Genre
      operationId: get_genre_genres__genre_id__get
      parameters:
        - name: genre_id
          in: path
          required: true
          schema:
            type: integer
            title: Genre Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenreResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    delete:
      tags:
        - Genres
      summary: Delete Genre
      operationId: delete_genre_genres__genre_id__delete
      parameters:
        - name: genre_id
          in: path
          required: true
          schema:
            type: integer
            title: Genre Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /publishers/:
    get:
      tags:
        - Publishers
      summary: Get Publishers
      operationId: get_publishers_publishers__get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/PublisherResponse'
                type: array
                title: Response Get Publishers Publishers  Get
    post:
      tags:
        - Publishers
      summary: Create Publisher
      operationId: create_publisher_publishers__post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PublisherCreate'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublisherResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /publishers/{publisher_id}:
    get:
      tags:
        - Publishers
      summary: Get Publisher
      operationId: get_publisher_publishers__publisher_id__get
      parameters:
        - name: publisher_id
          in: path
          required: true
          schema:
            type: integer
            title: Publisher Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublisherResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    delete:
      tags:
        - Publishers
      summary: Delete Publisher
      operationId: delete_publisher_publishers__publisher_id__delete
      parameters:
        - name: publisher_id
          in: path
          required: true
          schema:
            type: integer
            title: Publisher Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /borrowers/:
    get:
      tags:
        - Borrowers
      summary: Get Borrowers
      operationId: get_borrowers_borrowers__get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/BorrowerResponse'
                type: array
                title: Response Get Borrowers Borrowers  Get
    post:
      tags:
        - Borrowers
      summary: Create Borrower
      operationId: create_borrower_borrowers__post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BorrowerCreate'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BorrowerResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /borrowers/{borrower_id}:
    get:
      tags:
        - Borrowers
      summary: Get Borrower
      operationId: get_borrower_borrowers__borrower_id__get
      parameters:
        - name: borrower_id
          in: path
          required: true
          schema:
            type: integer
            title: Borrower Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BorrowerResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    delete:
      tags:
        - Borrowers
      summary: Delete Borrower
      operationId: delete_borrower_borrowers__borrower_id__delete
      parameters:
        - name: borrower_id
          in: path
          required: true
          schema:
            type: integer
            title: Borrower Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /borrowing_history/:
    get:
      tags:
        - Borrowing History
      summary: Get Borrowing History
      operationId: get_borrowing_history_borrowing_history__get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/BorrowingHistoryResponse'
                type: array
                title: Response Get Borrowing History Borrowing History  Get
    post:
      tags:
        - Borrowing History
      summary: Create Borrowing Record
      operationId: create_borrowing_record_borrowing_history__post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BorrowingHistoryCreate'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BorrowingHistoryResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /borrowing_history/{record_id}:
    get:
      tags:
        - Borrowing History
      summary: Get Borrowing Record
      operationId: get_borrowing_record_borrowing_history__record_id__get
      parameters:
        - name: record_id
          in: path
          required: true
          schema:
            type: integer
            title: Record Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BorrowingHistoryResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    delete:
      tags:
        - Borrowing History
      summary: Delete Borrowing Record
      operationId: delete_borrowing_record_borrowing_history__record_id__delete
      parameters:
        - name: record_id
          in: path
          required: true
          schema:
            type: integer
            title: Record Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /borrowing_history/{borrowing_id}/return:
    put:
      tags:
        - Borrowing History
      summary: Return Borrowing Record
      operationId: return_borrowing_record_borrowing_history__borrowing_id__return_put
      parameters:
        - name: borrowing_id
          in: path
          required: true
          schema:
            type: integer
            title: Borrowing Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BorrowingHistoryResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /register:
    post:
      tags:
        - Authentication
      summary: Register User
      operationId: register_user_register_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCreate'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /login:
    post:
      tags:
        - Authentication
      summary: Login For Access Token
      operationId: login_for_access_token_login_post
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Body_login_for_access_token_login_post'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Token'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
components:
  schemas:
    AuthorCreate:
      properties:
        name:
          type: string
          minLength: 1
          title: Name
        birthdate:
          anyOf:
            - type: string
              format: date
            - nullable: true
          title: Birthdate
      type: object
      required:
        - name
        - birthdate
      title: AuthorCreate
    AuthorResponse:
      properties:
        name:
          type: string
          minLength: 1
          title: Name
        birthdate:
          anyOf:
            - type: string
              format: date
            - nullable: true
          title: Birthdate
        id:
          type: integer
          title: Id
      type: object
      required:
        - name
        - birthdate
        - id
      title: AuthorResponse
    Body_login_for_access_token_login_post:
      properties:
        grant_type:
          anyOf:
            - type: string
              pattern: ^password$
            - nullable: true
          title: Grant Type
        username:
          type: string
          title: Username
        password:
          type: string
          title: Password
        scope:
          type: string
          title: Scope
          default: ''
        client_id:
          anyOf:
            - type: string
            - nullable: true
          title: Client Id
        client_secret:
          anyOf:
            - type: string
            - nullable: true
          title: Client Secret
      type: object
      required:
        - username
        - password
      title: Body_login_for_access_token_login_post
    BookCreate:
      properties:
        title:
          type: string
          minLength: 1
          title: Title
        isbn:
          type: string
          title: Isbn
        published_year:
          type: integer
          maximum: 2025
          minimum: 1440
          title: Published Year
        author_name:
          type: string
          minLength: 1
          title: Author Name
        genre_name:
          type: string
          minLength: 1
          title: Genre Name
        publisher_name:
          type: string
          minLength: 1
          title: Publisher Name
      type: object
      required:
        - title
        - isbn
        - published_year
        - author_name
        - genre_name
        - publisher_name
      title: BookCreate
    BookResponse:
      properties:
        title:
          type: string
          minLength: 1
          title: Title
        isbn:
          type: string
          title: Isbn
        published_year:
          type: integer
          maximum: 2025
          minimum: 1440
          title: Published Year
        id:
          type: integer
          title: Id
        author_name:
          type: string
          title: Author Name
        genre_name:
          type: string
          title: Genre Name
        publisher_name:
          type: string
          title: Publisher Name
      type: object
      required:
        - title
        - isbn
        - published_year
        - id
        - author_name
        - genre_name
        - publisher_name
      title: BookResponse
    BorrowerCreate:
      properties:
        name:
          type: string
          minLength: 1
          title: Name
        email:
          type: string
          format: email
          title: Email
      type: object
      required:
        - name
        - email
      title: BorrowerCreate
    BorrowerResponse:
      properties:
        name:
          type: string
          minLength: 1
          title: Name
        email:
          type: string
          format: email
          title: Email
        id:
          type: integer
          title: Id
      type: object
      required:
        - name
        - email
        - id
      title: BorrowerResponse
    BorrowingHistoryCreate:
      properties:
        book_id:
          type: integer
          title: Book Id
        borrower_id:
          type: integer
          title: Borrower Id
      type: object
      required:
        - book_id
        - borrower_id
      title: BorrowingHistoryCreate
    BorrowingHistoryResponse:
      properties:
        book_id:
          type: integer
          title: Book Id
        borrower_id:
          type: integer
          title: Borrower Id
        id:
          type: integer
          title: Id
        borrower_name:
          type: string
          title: Borrower Name
        borrower_email:
          type: string
          title: Borrower Email
        borrowed_at:
          type: string
          format: date-time
          title: Borrowed At
        returned_at:
          anyOf:
            - type: string
              format: date-time
            - nullable: true
          title: Returned At
      type: object
      required:
        - book_id
        - borrower_id
        - id
        - borrower_name
        - borrower_email
        - borrowed_at
        - returned_at
      title: BorrowingHistoryResponse
    GenreCreate:
      properties:
        name:
          type: string
          minLength: 1
          title: Name
      type: object
      required:
        - name
      title: GenreCreate
    GenreResponse:
      properties:
        name:
          type: string
          minLength: 1
          title: Name
        id:
          type: integer
          title: Id
      type: object
      required:
        - name
        - id
      title: GenreResponse
    HTTPValidationError:
      properties:
        detail:
          items:
            $ref: '#/components/schemas/ValidationError'
          type: array
          title: Detail
      type: object
      title: HTTPValidationError
    PublisherCreate:
      properties:
        name:
          type: string
          minLength: 1
          title: Name
        established_date:
          anyOf:
            - type: string
              format: date
            - nullable: true
          title: Established Date
      type: object
      required:
        - name
        - established_date
      title: PublisherCreate
    PublisherResponse:
      properties:
        name:
          type: string
          minLength: 1
          title: Name
        established_date:
          anyOf:
            - type: string
              format: date
            - nullable: true
          title: Established Date
        id:
          type: integer
          title: Id
      type: object
      required:
        - name
        - established_date
        - id
      title: PublisherResponse
    Token:
      properties:
        access_token:
          type: string
          title: Access Token
        token_type:
          type: string
          title: Token Type
      type: object
      required:
        - access_token
        - token_type
      title: Token
    User:
      properties:
        username:
          type: string
          minLength: 1
          title: Username
        email:
          type: string
          format: email
          title: Email
        id:
          type: integer
          title: Id
      type: object
      required:
        - username
        - email
        - id
      title: User
    UserCreate:
      properties:
        username:
          type: string
          minLength: 1
          title: Username
        email:
          type: string
          format: email
          title: Email
        password:
          type: string
          minLength: 8
          title: Password
      type: object
      required:
        - username
        - email
        - password
      title: UserCreate
    ValidationError:
      properties:
        loc:
          items:
            anyOf:
              - type: string
              - type: integer
          type: array
          title: Location
        msg:
          type: string
          title: Message
        type:
          type: string
          title: Error Type
      type: object
      required:
        - loc
        - msg
        - type
      title: ValidationError
